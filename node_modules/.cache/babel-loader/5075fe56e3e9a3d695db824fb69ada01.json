{"ast":null,"code":"import { useWallet } from '@solana/wallet-adapter-react';\nimport React, { useCallback, useMemo } from 'react';\nimport { Button } from './Button.js';\nimport { WalletIcon } from './WalletIcon.js';\nexport const WalletConnectButton = _ref => {\n  let {\n    children,\n    disabled,\n    onClick,\n    ...props\n  } = _ref;\n  const {\n    wallet,\n    connect,\n    connecting,\n    connected\n  } = useWallet();\n  const handleClick = useCallback(event => {\n    if (onClick) onClick(event); // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n    if (!event.defaultPrevented) connect().catch(() => {});\n  }, [onClick, connect]);\n  const content = useMemo(() => {\n    if (children) return children;\n    if (connecting) return 'Connecting ...';\n    if (connected) return 'Connected';\n    if (wallet) return 'Connect';\n    return 'Connect Wallet';\n  }, [children, connecting, connected, wallet]);\n  return React.createElement(Button, {\n    className: \"wallet-adapter-button-trigger\",\n    disabled: disabled || !wallet || connecting || connected,\n    startIcon: wallet ? React.createElement(WalletIcon, {\n      wallet: wallet\n    }) : undefined,\n    onClick: handleClick,\n    ...props\n  }, content);\n}; //# sourceMappingURL=WalletConnectButton.js.map","map":null,"metadata":{},"sourceType":"module"}