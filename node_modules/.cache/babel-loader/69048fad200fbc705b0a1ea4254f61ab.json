{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.chooseFragments = exports.shuffle = exports.chooseDegree = void 0;\n\nconst utils_1 = require(\"./utils\");\n\nconst xoshiro_1 = __importDefault(require(\"./xoshiro\"));\n\nconst randomSampler = require('@apocentre/alias-sampling');\n\nconst chooseDegree = (seqLenth, rng) => {\n  const degreeProbabilities = [...new Array(seqLenth)].map((_, index) => 1 / (index + 1));\n  const degreeChooser = randomSampler(degreeProbabilities, null, rng.nextDouble);\n  return degreeChooser.next() + 1;\n};\n\nexports.chooseDegree = chooseDegree;\n\nconst shuffle = (items, rng) => {\n  let remaining = [...items];\n  let result = [];\n\n  while (remaining.length > 0) {\n    let index = rng.nextInt(0, remaining.length - 1);\n    let item = remaining[index]; // remaining.erase(remaining.begin() + index);\n\n    remaining.splice(index, 1);\n    result.push(item);\n  }\n\n  return result;\n};\n\nexports.shuffle = shuffle;\n\nconst chooseFragments = (seqNum, seqLength, checksum) => {\n  // The first `seqLenth` parts are the \"pure\" fragments, not mixed with any\n  // others. This means that if you only generate the first `seqLenth` parts,\n  // then you have all the parts you need to decode the message.\n  if (seqNum <= seqLength) {\n    return [seqNum - 1];\n  } else {\n    const seed = Buffer.concat([utils_1.intToBytes(seqNum), utils_1.intToBytes(checksum)]);\n    const rng = new xoshiro_1.default(seed);\n    const degree = exports.chooseDegree(seqLength, rng);\n    const indexes = [...new Array(seqLength)].map((_, index) => index);\n    const shuffledIndexes = exports.shuffle(indexes, rng);\n    return shuffledIndexes.slice(0, degree);\n  }\n};\n\nexports.chooseFragments = chooseFragments; //# sourceMappingURL=fountainUtils.js.map","map":null,"metadata":{},"sourceType":"script"}