{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ParticleNetwork = void 0;\n\nconst auth_1 = require(\"./auth\");\n\nconst types_1 = require(\"./types\");\n\nclass ParticleNetwork {\n  constructor(config) {\n    if (!config) {\n      //for solana wallet adapter\n      config = {\n        projectId: \"34c6b829-5b89-44e8-90a9-6d982787b9c9\",\n        clientKey: \"c6Z44Ml4TQeNhctvwYgdSv6DBzfjf6t6CB0JDscR\",\n        appId: \"c1ad1496-5707-4db6-8a2b-3e9f7273d846\",\n        chainName: \"solana\",\n        chainId: 101 //mainnet\n\n      };\n    }\n\n    if ((!config.chainName || typeof config.chainName === \"string\") && (!config.chainId || typeof config.chainId === \"number\") && typeof config.projectId === \"string\" && typeof config.clientKey === \"string\" && typeof config.appId === \"string\") {\n      if (config.chainName) {\n        if (!Object.keys(types_1.supportChains).includes(config.chainName) || config.chainId && !types_1.supportChains[config.chainName].includes(config.chainId)) {\n          throw types_1.AuthError.unsupportedChain();\n        }\n\n        if (!config.chainId) {\n          config.chainId = types_1.supportChains[config.chainName][0];\n        }\n      } else {\n        config.chainName = \"ethereum\";\n        config.chainId = 1;\n      }\n\n      this.config = config;\n      this.auth = new auth_1.Auth(this.config);\n    } else {\n      throw types_1.AuthError.paramsError();\n    }\n  }\n\n  setAuthTheme(config) {\n    this.auth.setAuthTheme(config);\n  }\n\n  setChainInfo(chain) {\n    return this.auth.setChainInfo(chain);\n  }\n\n}\n\nexports.ParticleNetwork = ParticleNetwork; //# sourceMappingURL=particle-network.js.map","map":null,"metadata":{},"sourceType":"script"}